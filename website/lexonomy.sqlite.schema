CREATE TABLE dicts (id TEXT PRIMARY KEY, title TEXT, language TEXT, creator TEXT, configs JSON);
CREATE INDEX title ON dicts (title);

CREATE TABLE users (email TEXT PRIMARY KEY, passwordHash TEXT, sessionKey TEXT, sessionLast DATETIME, apiKey TEXT, ske_id INTEGER, ske_username TEXT, consent INTEGER, ske_apiKey TEXT, annotator_role JSON, created_by TEXT, is_manager INTEGER);
CREATE INDEX email_password ON users (email, passwordHash);
CREATE INDEX email_session ON users (email, sessionKey, sessionLast);

CREATE TABLE user_dict (id INTEGER PRIMARY KEY AUTOINCREMENT, dict_id TEXT, user_email TEXT, canView INTEGER DEFAULT 0, canEdit INTEGER DEFAULT 0, canAdd INTEGER DEFAULT 0, canDelete INTEGER DEFAULT 0, canEditSource INTEGER DEFAULT 0, canConfig INTEGER DEFAULT 0, canDownload INTEGER DEFAULT 0, canUpload INTEGER DEFAULT 0);
CREATE INDEX dict_id ON user_dict (dict_id);
CREATE INDEX user_email ON user_dict (user_email);

CREATE TABLE projects (id TEXT PRIMARY KEY, project_name TEXT, description TEXT, ref_corpus TEXT, language TEXT, active INTEGER, src_dic_id TEXT, workflow_id TEXT);
CREATE INDEX project_id ON projects (project_name);

CREATE TABLE user_projects (id INTEGER PRIMARY KEY AUTOINCREMENT, project_id TEXT, user_email TEXT, role TEXT, project_name TEXT);
CREATE INDEX user_projects_id ON user_projects (project_id);
CREATE INDEX user_projects_email ON user_projects (user_email);
CREATE INDEX user_projects_role ON user_projects (role);

CREATE TABLE project_dicts (id INTEGER PRIMARY KEY AUTOINCREMENT, project_id TEXT, dict_id TEXT, source_nvh TEXT, stage TEXT, status TEXT, assignee TEXT, remaining JSON DEFAULT '{}', created DATETIME);
CREATE INDEX project_dicts_dict_id ON project_dicts (dict_id);
CREATE INDEX project_dicts_project_id ON project_dicts (project_id);
CREATE INDEX project_dicts_stage ON project_dicts (stage);

CREATE TABLE workflows (id TEXT PRIMARY KEY, name TEXT, description TEXT);
CREATE INDEX workflow_id ON workflows (id);
INSERT INTO workflows VALUES ('demo_dictionary_express', 'DEMO Dictionary Express', 'Dictionary express demo workflow');

CREATE TABLE recovery_tokens (email text, requestAddress text, token text, expiration datetime, usedDate datetime, usedAddress text);
CREATE TABLE register_tokens (email text, requestAddress text, token text, expiration datetime, usedDate datetime, usedAddress text);

CREATE TABLE dict_fav (dict_id text, user_email text);
CREATE INDEX fav_dict_id on dict_fav (dict_id);
CREATE INDEX fav_user_email on dict_fav (user_email);

CREATE TABLE annotator_roles (name TEXT PRIMARY KEY, description TEXT);

CREATE TABLE configs (id TEXT PRIMARY KEY, value TEXT);
