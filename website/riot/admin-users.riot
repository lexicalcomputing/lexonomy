<admin-users>
   <loading-overlay if={state.isLoading}/>
   <h1>All Users</h1>

   <div class="topBar">
      <span class="searchBox input-field">
            <i class="material-icons prefix grey-text">search</i>
         <input id="searchBox"
               onkeyup={onSearchKeyUp}
               style="width: 150px;">
         <i onclick={onSearchCancelClick}
            class="material-icons clearFilterIcon grey-text clickable">close</i>
      </span>
   </div>
   <table if={state.users.length}
         class="userTable">
      <thead>
         <tr>
            <th class="toggleColumn"></th>
            <th class="titleColumn">Email</th>
            <th class="titleColumn">Comment</th>
            <th class="dictionaryColumn">Dictionaries</th>
            <th class="actionColumn"></th>
         </tr>
      </thead>
      <tbody each={ (user, idx) in state.users }>
         <tr class="userRow {user.dictionaries.length && 'pointer'}"
               onclick={user.dictionaries.length ? onDictionaryToggleClick : null}>
            <td>
               <i if={user.dictionaries.length}
                     class="toggleIcon material-icons clickable">add</i>
            </td>
            <td class="user">
               { user.email }
            </td>
            <td class="user">
               { user.comment }
            </td>
            <td>
               {user.dictionaries.length}
            </td>
            <td class="user-actions">
               <a class="clickable"
                     title="delete"
                     onclick={ doDeleteUser.bind(this, user.email) }>
                  <i class="material-icons">delete</i>
               </a>
            </td>
         </tr>
         <tr class="dictionaryRow">
            <td colspan="4">
               <div class="dictionaryList" style="display: none;">
                  <div each={dictionary in user.dictionaries}>
                     <a href="#/{dictionary.id}">
                        {dictionary.title ? dictionary.title : "--no title--"}
                     </a>
                  </div>
               </div>
            </td>
         </tr>
      </tbody>
   </table>
   <template if={!state.isLoading}>
      <div if={state.hasMore}
            class="center-align">
         <button class="btn showMoreBtn"
               onclick={onShowMoreClick}>Show more</button>
      </div>
      <div if={!state.users.length}
            class="center"
            style="margin: 10vh auto;">
         <h1 class="grey-text lighten-2">Nothing found</h1>
      </div>
   </template>

   <script>
      export default{
         state: {
            isLoading: true,
            users: [],
            query: "",
            howmany: 500,
            hasMore: true
         },

         onMounted(){
            this.search()
         },

         search(){
            this.update({isLoading: true})
            this.store.loadAdminUserList(this.state.query, this.state.howmany + 1)  // + 1 to find, if there are more than "howmany" items
                  .done(payload => {
                     this.state.hasMore = false
                     if(payload.entries.length == this.state.howmany + 1){
                        payload.entries.pop()
                        this.state.hasMore = true
                     }
                     this.state.users = payload.entries
                  })
                  .always(() => {
                     this.update({isLoading: false})
                  })
         },

         doDeleteUser(email) {
            if (confirm("Are you sure you want to delete user " + email + "? You will not be able to undo this.")) {
               this.update({isLoading: true})
               this.store.deleteUser(email)
                     .always(payload => {
                        if(!payload.error){
                           this.state.users = this.state.users.filter(user => user.email != email)
                        }
                        this.update({isLoading: false})
                     })
            }
         },

         onSearchKeyUp(evt){
            if(evt.keyCode == 13){
               this.state.query = $("#searchBox").val()
               this.state.howmany = 500
               this.search()
            }
         },

         onSearchCancelClick(){
            this.update({
               query: "",
               howmany: 500
            })
            this.search()
         },

         onDictionaryToggleClick(evt){
            let tbody = $(evt.target).closest("tbody")
            let dictionaryList = tbody.find(".dictionaryList")
            let isVisible = dictionaryList.is(":visible")
            dictionaryList[isVisible ? "slideUp" : "slideDown"]()
            tbody.find(".toggleIcon").html(isVisible ? "add" : "remove")
         },

         onShowMoreClick(){
            this.state.howmany += 500
            this.search()
         }
      }
   </script>

   <style>
      .topBar{
         display: flex;
         align-items: center;
         flex-wrap: wrap;
      }
      .searchBox{
         max-width: 200px;
         display: inline-block;
         margin: 0 15px 0 0;
      }
      .searchBox input{
         padding-right: 27px;
      }
      .clearFilterIcon{
         position: absolute;
         right: 5px;
         top: 11px;
      }
      .userTable tbody:hover tr{
         background-color: rgba(242,242,242,0.5);
      }
      .userRow{
         border: none;
      }
      .dictionaryRow td{
         padding: 0 0.7rem 0 85px;
      }
      table td{
         padding: 10px 10px;
      }
      .dictionaryList{
         padding: 0 0 10px 0;
      }
      .toggleColumn,
      .dictionaryColumn,
      .actionColumn{
         width: 1px;
      }
      .showMoreBtn{
         margin: 30px 0;
      }
   </style>
</admin-users>
