<nvh-schema-syntax-help>
   <span class="schemaSyntaxToggleBtn">
      <i class="material-icons tiny mr-2">help</i>
      <a href="javascript:void(0)"
            onclick={onToggleSchemaSyntaxClick}>
         Schema syntax
      </a>
   </span>

   <div id="schemaSyntax"
         class="tabCustomLegend p-6 z-depth-2 grey lighten-5" style="display: none; top: min(4vh, 80px); right: 50px;">
      <button class="btn btn-flat btn-floating right"
            onclick={onToggleSchemaSyntaxClick}>
         <i class="material-icons grey-text">close</i>
      </button>
      <h2 class="mt-0">NVH schema syntax</h2>
      <div>
         Each row in NVH schema must be in the following form:
      </div>
      <div class="center-align grey lighten-4 monospace mt-2" style="font-size: 1.3em;">
         <span class="teal-text">INDENT </span>
         <span class="blue-text">NAME: </span>
         <span class="red-text">COUNT </span>
         <span class="green-text">TYPE </span>
         <span class="orange-text">[VALUES]</span>
         <span class="purple-text">~REGEX </span>
      </div>
      <ul class="syntaxElementPartList">
         <li>
            <span class="teal-text">INDENT</span>
            <div class="ml-4">
               Each child element must be two spaces more indented than its parent element. Root element has no indentation.
            </div>
         </li>
         <li>
            <span class="blue-text">NAME</span>
            <small class="ml-2 grey-text">required</small>
            <div class="ml-4">
               Unique element name followed by a colon. Allowed characters are <span class="monospace">a-Z</span>, <span class="monospace">A-Z</span>, <span class="monospace">0-9</span>, <span class="monospace">-</span> and <span class="monospace">_</span>.
            </div>
         </li>
         <li class="syntaxCount">
            <span class="red-text">COUNT</span>
            <small class="ml-2 grey-text">optional</small>
            <div class="ml-4">
               Specifies the number of elements (with this name) in parent element.
               <ul class="ml-4">
                  <li>
                     <span class="syntaxValue monospace">?</span>
                     <span class="grey-text ml-2">zero or one</span>
                  </li>
                  <li>
                     <span class="syntaxValue monospace">*</span>
                     <span class="grey-text ml-2">zero or more</span>
                  </li>
                  <li>
                     <span class="syntaxValue monospace">+</span>
                     <span class="grey-text ml-2">one or more</span>
                  </li>
                  <li>
                     <span class="syntaxValue monospace">1</span>
                     <span class="grey-text ml-2">exactly one</span>
                  </li>
                  <li>
                     <span class="syntaxValue monospace">2+</span>
                     <span class="grey-text ml-2">two or more</span>
                  </li>
                  <li>
                     <span class="syntaxValue monospace">3-4</span>
                     <span class="grey-text ml-2">three to four</span>
                  </li>
               </ul>
            </div>
         </li>
         <li class="syntaxType">
            <span class="green-text">TYPE</span>
            <small class="ml-2 grey-text">optional</small>
            <div class="ml-4">
               Specifies the element value type. If ommited, "string" is used.
               <ul class="ml-4">
                  <li>
                     <span class="syntaxValue monospace">string</span>
                     <span class="grey-text ml-2">text value</span>
                  </li>
                  <li>
                     <span class="syntaxValue monospace">int</span>
                     <span class="grey-text ml-2">numeric value</span>
                  </li>
                  <li>
                     <span class="syntaxValue monospace">image</span>
                     <span class="grey-text ml-2">image URL</span>
                  </li>
                  <li>
                     <span class="syntaxValue monospace">audio</span>
                     <span class="grey-text ml-2">audio URL</span>
                  </li>
                  <li>
                     <span class="syntaxValue monospace">url</span>
                     <span class="grey-text ml-2">general URL</span>
                  </li>
                  <li>
                     <span class="syntaxValue monospace">empty</span>
                     <span class="grey-text ml-2">element without value, it may have child elements</span>
                  </li>
                  <li>
                     <span class="syntaxValue monospace">bool</span>
                     <span class="grey-text ml-2">Yes or No</span>
                  </li>
                  <li>
                     <span class="syntaxValue monospace">list</span>
                     <span class="grey-text ml-2">list of values</span>
                  </li>
               </ul>
            </div>
         </li>
         <li>
            <span class="orange-text">VALUES</span>
            <small class="ml-2 grey-text">optional</small>
            <div class="ml-4">
               List of allowed values in double quotes, separated with comma, enclosed in square brackets (e.g. <span class="monospace">["red","blue","green"]</span>). Element with specified "values" will be displayed as dropdown select.
            </div>
         </li>
         <li>
            <span class="purple-text">REGEX</span>
            <small class="ml-2 grey-text">optional</small>
            <div class="ml-4">
               You can use a regular expression to restrict the value of an element. Regular expression must be preceded by <span class="monospace">~</span>.
            </div>
         </li>
      </ul>
   </div>

   <script>
      export default{

         onMounted(){
            window.makeElementDraggable("#schemaSyntax", "#schemaSyntax h3")
         },

         onToggleSchemaSyntaxClick(){
            $("#schemaSyntax", this.root).toggle()
         },
      }
   </script>

   <style type="scss">
      .schemaSyntaxToggleBtn{
         display: flex;
         align-items: center;
      }
      .tabCustomLegend{
         max-width: 32rem;
         min-width: 32rem;
         max-height: 95vh;
         overflow: auto;
         .syntaxElementPartList{
            & > li{
               margin-top: 0.2rem;
            }
            ul li{
               line-height: 1.2rem;
            }
         }
         .syntaxValue{
            display: inline-block;
         }
         .syntaxType{
            .syntaxValue{
               min-width: 3.8rem;
            }
         }
         .syntaxCount{
            .syntaxValue{
               min-width: 1.9rem;
            }
         }
      }
   </style>
</nvh-schema-syntax-help>
