<dict-public-entry>
   <loading-overlay if={state.isLoading}/>
   <h3 class="header">
      { dictData.title }
      <a href="#/{ dictData.dictId }"
            class="infoIcon">
         <i class="material-icons">info</i>
      </a>
   </h3>
   <template if={ dictData.public }>
      <div class="divider"></div>
      <div class="row">
         <div class="col s3">
            <ul class="nabes">
               <li each={ entry in state.more}
                     active={entry.id == dictData.entryId}>
                  <a href="#/{ dictData.dictId }/{ entry.id }">{ entry.titlePlain }</a>
               </li>
            </ul>
         </div>
         <div class="col s9">
            <entry-view/>
         </div>
      </div>
      <div class="divider"></div>
      <div class="section">
         { dictData.licence }
      </div>
   </template>

   <style>
      .infoIcon{margin-left: 1.5rem;}
      .infoIcon a{font-size: 1.8rem;}
      .nabes li a:hover {text-decoration: underline;}
      .nabes li[active=active] a {background-color: #ffccbc;}
   </style>

   <script>
      export default {
         bindings: [["store", "entryChanged", "entryChanged"]],
         state: {
            isLoading: true,
            more: []
         },

         loadMoreEntries() {
            this.update({isLoading: true})
            if (this.dictData.entryId != null) {
               $.get(window.API_URL + this.dictData.dictId + "/" + this.dictData.entryId + "/nabes.json", (response) => {
                  if (response.nabes) {
                     this.state.more = response.nabes
                  }
                  this.update({isLoading: false})
               })
            }
         },

         onMounted() {
            this.loadMoreEntries()
         },

         entryChanged(){
            this.loadMoreEntries()
         }
      }
   </script>
</dict-public-entry>

