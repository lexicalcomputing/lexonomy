<element-select>
   <select onchange={onChange}>
      <option if={props.showEmptyValue}
            selected={props.riotValue == ""}
            value="">-select element-</option>
      <option each={option in elementOptionList}
            selected={option.elementName == props.riotValue}
            value={option.elementName}>
         <span style="{option.style}">
            {option.elementName}
         </span>
      </option>
   </select>

   <script>
      export default{
         onBeforeMount(){
            this.elementOptionList = this.addElementAndItsChildren(this.dictData.config.structure.root)
         },


         onMounted(){
            window.initFormSelects(this.root)
         },

         onUpdated(){
            window.initFormSelects(this.root)
         },

         onChange(evt){
            this.props.onChange && this.props.onChange(evt.target.value, this.props.name)
         },

         addElementAndItsChildren(elementName, indent=0){
            let list = []
            let elementConfig = this.dictData.config.structure.elements[elementName]
            let style = `color: ${window.nvhStore.getElementColor(elementName)}; margin-left: ${indent * 15}px`
            list.push({
               elementName: elementName,
               style: style
            })
            elementConfig.children.forEach(childName => {
               list.push(...this.addElementAndItsChildren(childName, indent + 1))
            })
            return list
         }
      }
   </script>
</element-select>
