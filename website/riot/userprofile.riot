<userprofile>
   <h3>Account settings</h3>
   <!-- Sketch Engine account -->
   <div class="row">
      <label>Sketch Engine login</label>
      <div if={siteconfig.sketchengineLoginPage && props.userInfo.ske_username}>
         <p>Your Lexonomy account is linked to your Sketch Engine account <b>{ this.props.userInfo.ske_username }</b>
            <br/>
            <a href={ this.siteconfig.sketchengineLoginPage }>Link to a different Sketch Engine account&nbsp;»</a>
         </p>
      </div>
      <div if={this.siteconfig.sketchengineLoginPage && !props.userInfo.ske_username}>
         <p><strong>Sketch Engine login</strong></p>
         <p><a href={ this.siteconfig.sketchengineLoginPage }>Link Lexonomy to your Sketch Engine account&nbsp;»</a>
         </p>
      </div>
      <div if={ !siteconfig.sketchengineLoginPage }>
         <p if={ this.skeuserMessage != '' }>{ this.skeuserMessage }</p>
         <div class="input-field" style="margin-top: 0;">
            <div style="display: flex; gap: 10px; align-items: center;">
               <input id="skeusername" type="text" class="validate" value={ this.props.userInfo.ske_username } style="width: 350px;" />
               <button class="btn waves-effect waves-light" type="submit" onclick={ doChangeUser } style="margin-bottom: 10px;">Change username
                  <i class="material-icons right">send</i>
               </button>
            </div>
            <span class="helper-text">Set your login username to Sketch Engine.</span>
         </div>
      </div>
   </div>

   <!-- Sketch Engine API key -->
   <div class="row">
      <label>Sketch Engine API key</label>
      <p if={ this.skeapiMessage != '' }>{ this.skeapiMessage }</p>
      <p if={ 'sketchengineLoginPage' in this.siteconfig && this.siteconfig.sketchengineLoginPage != "" }>
         Unless you need special setup, Please, <a href={ this.siteconfig.sketchengineLoginPage }>login via Sketch Engine</a> to set API key automatically.
      </p>
      <div class="input-field" style="margin-top: 0;">
         <div style="display: flex; gap: 10px; align-items: center;">
            <input id="skeapi" type="text" class="validate" value={ this.props.userInfo.ske_apiKey } style="width: 350px;"/>
            <button class="btn waves-effect waves-light" type="submit" onclick={ doChangeKey } style="margin-bottom: 10px;">Change API key
               <i class="material-icons right">send</i>
            </button>
         </div>
         <span class="helper-text">Set your API key for Sketch Engine.</span>
      </div>
   </div>

   <!-- Lexonomy API key -->
   <div class="row">
      <p>{ this.apiMessage }</p>
      <label>Lexonomy API key</label>
      <div class="input-field" style="margin-top: 0;">
         <div style="display: flex; gap: 10px; align-items: center;">
            <input type="text" value={this.props.userInfo.apiKey ? this.props.userInfo.apiKey : "not set"} disabled style="width: 350px;">

            <button class="btn waves-effect waves-light" type="submit" onclick={ doNewKey } style="margin-bottom: 10px;">Generate new API key
               <i class="material-icons right">autorenew</i>
            </button>
            <button class="btn waves-effect waves-light" type="submit" onclick={ doDeleteKey } style="margin-bottom: 10px;">Remove API key
               <i class="material-icons right">delete</i>
            </button>
         </div>
         <span class="helper-text">This key allows external tools such as Sketch Engine to create a dictionary in your account and to populate it with pre-generated entries.</span>
      </div>
   </div>

   <!-- set new password -->
   <div class="row">
      <p>{ this.passMessage }</p>
      <label>New password</label>
      <div class="input-field" style="margin-top: 0;">
         <div style="display: flex; gap: 10px; align-items: center;">
            <input id="password" type="password" class="validate" style="width: 350px;"/>
            <button class="btn waves-effect waves-light" type="submit" onclick={ doChangePass } style="margin-bottom: 10px;">Change password
               <i class="material-icons right">send</i>
            </button>
         </div>
         <span class="helper-text">Set your password to access Lexonomy.</span>
      </div>
   </div>
   <div>
      <a class="btn" href="#/" onclick="window.history.back()">Back</a>
   </div>

   <script>
      export default {
         passMessage: '',
         apiMessage: '',
         skeuserMessage: '',
         skeapiMessage: '',
         siteconfig: {},
         onMounted() {
            if (Object.keys(this.props.siteconfig) == 0) {
               $.get(window.API_URL + "siteconfigread.json", (response) => {
                  this.siteconfig = response;
                  this.update();
               });
            } else {
               this.siteconfig = this.props.siteconfig;
               this.update();
            }
            M.updateTextFields();
         },

         doChangePass(event) {
            if ($('#password').val() != '') {
               $.post(window.API_URL + "changepwd.json", {password: $('#password').val()}, (response) => {
                  if (response.success) {
                     this.passMessage = 'Password changed.';
                     this.update();
                  } else {
                     this.passMessage = 'There was an error saving the password.';
                     this.update();
                  }
               });
            }
         },

         doChangeUser(event) {
            if ($('#skeusername').val() != '') {
               $.post(window.API_URL + "changeskeusername.json", {ske_userName: $('#skeusername').val()}, (response) => {
                  if (response.success) {
                     this.skeuserMessage = 'Username changed.';
                     this.update();
                  } else {
                     this.skeuserMessage = 'There was an error saving the username.';
                     this.update();
                  }
               });
            }
         },

         doChangeKey(event) {
            if ($('#skeapi').val() != '') {
               $.post(window.API_URL + "changeskeapi.json", {ske_apiKey: $('#skeapi').val()}, (response) => {
                  if (response.success) {
                     this.skeapiMessage = 'API key changed.';
                     this.update();
                  } else {
                     this.skeapiMessage = 'There was an error saving the API key.';
                     this.update();
                  }
               });
            }
         },

         doNewKey(event) {
            var newkey = this.generateKey();
            $.post(window.API_URL + "changeoneclickapi.json", {apiKey: newkey}, (response) => {
               if (response.success) {
                  this.apiMessage = 'API key changed.';
                  this.props.userInfo.apiKey = newkey;
                  this.update();
               } else {
                  this.apiMessage = 'There was an error saving the API key.';
                  this.update();
               }
            });
         },

         doDeleteKey(event) {
            $.post(window.API_URL + "changeoneclickapi.json", {apiKey: ""}, (response) => {
               if (response.success) {
                  this.apiMessage = 'API key deleted.';
                  this.props.userInfo.apiKey = "";
                  this.update();
               } else {
                  this.apiMessage = 'There was an error saving the API key.';
                  this.update();
               }
            });
         },

         generateKey() {
            var alphabet="ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
            var key="";
            while(key.length<32) {
               var i=Math.floor(Math.random() * alphabet.length);
               key+=alphabet[i];
            }
            return key;
         }
      }
   </script>
</userprofile>
