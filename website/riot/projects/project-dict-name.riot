<project-dict-name>
   <h3 class="projectDictName dictName_{window.idEscape(props.dict.title)} borderBottom"
         onmouseover={onMouseOver}
         onmouseout={onMouseOut}>
      <trim-text text={state.name}
            max={30}/>
      <a if={props.dict.dictID}
            href="#{props.dict.dictID}"
            target="_blank"
            class="clickable">
         <i class="material-icons ml-2">open_in_new</i>
      </a>
   </h3>
   <div class="projectDictSize displayFlex">
      <span>
         {!props.dict.total ? 'empty' : window.Formatter.num(this.props.dict.total) + " entries"}
      </span>
      <span if={props.dict.total}
            class="grey-text ml-auto">
         assigned: {window.Formatter.num(props.dict.total - props.dict.remaining)}, remaining: {window.Formatter.num(props.dict.remaining)}
      </span>
   </div>


   <script>
      export default{
         onBeforeMount(){
            let name = this.props.dict.title || ""
            if(/^\d+\..*/.test(this.props.dict.title)){
               name = name.substr(name.indexOf(".") + 1)  // remove project ID
            }
            this.state.name = name
         },

         onMouseOver(){
            $(`.dictName_${window.idEscape(this.props.dict.title)}`)
                  .addClass("highlightDictName")
                  .closest(".card-panel").addClass("highlightDictPanel")
         },

         onMouseOut(){
            $(".highlightDictName").removeClass("highlightDictName")
            $(".highlightDictPanel").closest(".card-panel").removeClass("highlightDictPanel")
         }
      }
   </script>


   <style type="scss">
      :host{
         display: block
      }
      .projectDictName{
         font-size: 1.2rem;
         margin-bottom: 0;
         cursor: default;
         padding-bottom: 0.5em;
         margin-bottom: 0.5em;
         i{
            font-size: 1rem;
         }
      }
      .projectDictSize{
         font-size: 0.8rem;
         margin-bottom: 15px;
         gap: 20px;
      }
   </style>
</project-dict-name>
