<example-markup-item>
  <div class="example-item-markup-wrapper">
    <div>
      <span if={state.labelTextValue !== "" && state.showLabelBefore} class="example-item-label-before"
          style={props.getCssStyles(props.labelStyles)}>
        {state.labelTextValue}
      </span>
      <span each={child in props.valueStylePairs}
          style={props.getCssStyles(child.styles) + "word-break: break-word;"}>
        {child.value}
      </span>
      <span if={state.labelTextValue !== "" && !state.showLabelBefore} class="example-item-label-after"
          style={props.getCssStyles(props.labelStyles)}>
        {state.labelTextValue}
      </span>
    </div>
  </div>

  <script>
    export default {
      state: {
        labelTextValue: null,
        showLabelBefore: null,
      },

      onBeforeMount() {
        this.state = {
          labelTextValue: this.props.labelStyles === undefined || this.props.labelStyles["label-text-value"] === undefined ? "" : this.props.labelStyles["label-text-value"],
          showLabelBefore: this.props.labelStyles === undefined || this.props.labelStyles["show-label-before"] === undefined ? true : this.props.labelStyles["show-label-before"],
        }
      },
      onBeforeUpdate() {
        this.state = {
          labelTextValue: this.props.labelStyles === undefined || this.props.labelStyles["label-text-value"] === undefined ? "" : this.props.labelStyles["label-text-value"],
          showLabelBefore: this.props.labelStyles === undefined || this.props.labelStyles["show-label-before"] === undefined ? true : this.props.labelStyles["show-label-before"],
        };
      },
    }
  </script>

  <style>
    .example-item-markup-wrapper {
      display: flex;
      flex-wrap: wrap;
      align-items: center;
    }
  </style>

</example-markup-item>