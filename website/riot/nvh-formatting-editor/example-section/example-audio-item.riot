<example-audio-item>
  <div class="example-audio-item-wrapper">
    <audio if={state.showPlayer} controls src={props.value} style={props.getCssStyles(props.styles)}></audio>
    <div class="example-audio-item-url">
      <a if={state.showUrl && state.showIcon} href={props.value}>
        <i class="small material-icons">audiotrack</i>
      </a>
      <a if={state.showUrl} title={state.textAsUrlTooltip ? state.textReplacementForUrl : ""} href={props.value}>{state.replaceUrlWithText && !state.textAsUrlTooltip ? state.textReplacementForUrl : props.value}</a>
    </div>
  </div>

  <script>
    export default {
      state: {
        showPlayer: null,
        showUrl: null,
        replaceUrlWithText: null,
        textReplacementForUrl: null,
        textAsUrlTooltip: null,
        showIcon: null,
      },

      onBeforeMount() {
        this.state = {
          showPlayer: this.props.styles["show-player"],
          showUrl: this.props.styles["show-url"] === undefined ? true : this.props.styles["show-url"],
          replaceUrlWithText: this.props.styles["replace-url-with-text"],
          textReplacementForUrl: this.props.styles["text-replacement-for-url"],
          textAsUrlTooltip: this.props.styles["text-as-url-tooltip"],
          showIcon: this.props.styles["show-icon"],
        }
      },

      onBeforeUpdate() {
        this.state = {
          showPlayer: this.props.styles["show-player"],
          showUrl: this.props.styles["show-url"] === undefined ? true : this.props.styles["show-url"],
          replaceUrlWithText: this.props.styles["replace-url-with-text"],
          textReplacementForUrl: this.props.styles["text-replacement-for-url"],
          textAsUrlTooltip: this.props.styles["text-as-url-tooltip"],
          showIcon: this.props.styles["show-icon"],
        }
      }
    }
  </script>

  <style>
    .example-audio-item-wrapper {
      display: flex;
      flex-direction: column;
    }
    .example-audio-item-url {
      display: flex;
    }
  </style>
</example-audio-item>