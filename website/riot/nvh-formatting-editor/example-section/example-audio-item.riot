<example-audio-item>
  <div class="example-audio-item-wrapper">
    <div if={state.labelTextValue !== "" && state.showLabelBefore} class="example-item-label-vertical"
        style={props.getCssStyles(props.labelStyles)}>
      {state.labelTextValue}
    </div>
    <audio if={state.showPlayer} controls src={props.value} style={props.getCssStyles(props.styles)}></audio>
    <div class="example-audio-item-url">
      <a if={state.showUrl && state.showIcon} href={props.value}>
        <div>{nvhFormattingEditor.getIcon(this.state.iconItem)}</div>
      </a>
      <a if={state.showUrl && state.showIcon} href={props.value}>
        <div>{nvhFormattingEditor.getUnicodeIcon(this.state.unicodeIcon)}</div>
      </a>
      <a if={state.showUrl} class="tooltipped" data-tooltip={state.textAsUrlTooltip ? state.textReplacementForUrl : ""} href={props.value}>{state.replaceUrlWithText && !state.textAsUrlTooltip ? state.textReplacementForUrl : props.value}</a>
    </div>
    <div if={state.labelTextValue !== "" && !state.showLabelBefore} class="example-item-label-vertical"
        style={props.getCssStyles(props.labelStyles)}>
      {state.labelTextValue}
    </div>
  </div>

  <script>
    export default {
      state: {
        showPlayer: null,
        showUrl: null,
        replaceUrlWithText: null,
        textReplacementForUrl: null,
        textAsUrlTooltip: null,
        showIcon: null,
        iconItem: null,
        unicodeIcon: null,
        labelTextValue: null,
        showLabelBefore: null,
      },
      nvhFormattingEditor: null,

      onBeforeMount(props) {
        this.nvhFormattingEditor = window.nvhFormattingEditor;
        this.state = {
          showPlayer: props.styles["show-player"],
          showUrl: props.styles["show-url"] === undefined ? true : props.styles["show-url"],
          replaceUrlWithText: props.styles["replace-url-with-text"],
          textReplacementForUrl: props.styles["text-replacement-for-url"],
          textAsUrlTooltip: props.styles["text-as-url-tooltip"],
          showIcon: props.styles["show-icon"],
          iconItem: props.styles["icon-item"],
          unicodeIcon: props.styles["unicode-icon"],
          labelTextValue: props.labelStyles === undefined || props.labelStyles["label-text-value"] === undefined ? "" : props.labelStyles["label-text-value"],
          showLabelBefore: props.labelStyles === undefined || props.labelStyles["show-label-before"] === undefined ? true : props.labelStyles["show-label-before"],
        };
      },

      onBeforeUpdate(props) {
        this.state = {
          showPlayer: props.styles["show-player"],
          showUrl: props.styles["show-url"] === undefined ? true : props.styles["show-url"],
          replaceUrlWithText: props.styles["replace-url-with-text"],
          textReplacementForUrl: props.styles["text-replacement-for-url"],
          textAsUrlTooltip: props.styles["text-as-url-tooltip"],
          showIcon: props.styles["show-icon"],
          iconItem: props.styles["icon-item"],
          unicodeIcon: props.styles["unicode-icon"],
          labelTextValue: props.labelStyles === undefined || props.labelStyles["label-text-value"] === undefined ? "" : props.labelStyles["label-text-value"],
          showLabelBefore: props.labelStyles === undefined || props.labelStyles["show-label-before"] === undefined ? true : props.labelStyles["show-label-before"],
        };
      }
    }
  </script>

  <style>
    .example-audio-item-wrapper {
      display: flex;
      flex-direction: column;
    }
    .example-audio-item-url {
      display: flex;
      align-items: center;
    }
  </style>
</example-audio-item>