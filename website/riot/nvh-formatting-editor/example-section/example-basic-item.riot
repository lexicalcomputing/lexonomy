<example-basic-item>
  <div class="example-basic-item-wrapper">
    <pre if={state.labelTextValue !== "" && state.showLabelBefore} class="example-item-label-before"
        style={nvhFormattingEditor.getCssStyles(props.state, props.labelStyles)}>
      {state.labelTextValue}
    </pre>
    <pre style={nvhFormattingEditor.getCssStyles(props.state, props.styles)}>
      {props.value}
    </pre>
    <pre if={state.labelTextValue !== "" && !state.showLabelBefore} class="example-item-label-after"
        style={nvhFormattingEditor.getCssStyles(props.state, props.labelStyles)}>
      {state.labelTextValue}
    </pre>
  </div>
  
  </div>

  <script>
    export default {
      state: {
        labelTextValue: null,
        showLabelBefore: null,
      },
      nvhFormattingEditor: null,

      onBeforeMount(props) {
        this.nvhFormattingEditor = window.nvhFormattingEditor;
        this.state = {
          labelTextValue: props.labelStyles === undefined || props.labelStyles["label-text-value"] === undefined ? "" : props.labelStyles["label-text-value"],
          showLabelBefore: props.labelStyles === undefined || props.labelStyles["show-label-before"] === undefined ? true : props.labelStyles["show-label-before"],
        }
      },
      onBeforeUpdate(props) {
        this.state = {
          labelTextValue: props.labelStyles === undefined || props.labelStyles["label-text-value"] === undefined ? "" : props.labelStyles["label-text-value"],
          showLabelBefore: props.labelStyles === undefined || props.labelStyles["show-label-before"] === undefined ? true : props.labelStyles["show-label-before"],
        }
      }
    }
  </script>

  <style>
    .example-basic-item-wrapper {
      display: flex;
      flex-wrap: wrap;
      align-items: center;
    }
  </style>

</example-basic-item>