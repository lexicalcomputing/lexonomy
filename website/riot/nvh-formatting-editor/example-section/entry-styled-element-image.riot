<entry-styled-element-image class="entry-styled-element-image">
   <slot name="left-label"/>
   <template if={state.elementStyles["show-image"]}>
      <img if={!state.elementStyles["make-image-clickable"]}
            src={props.value}
            style={nvhFormattingEditor.getMediaMaxSizesRules(state.elementStyles)}/>
      <a if={state.elementStyles["make-image-clickable"]}
            class="link-no-decoration"
            href={props.value}
            target="{state.elementStyles["open-url-new-tab"] ? '_blank' : '_self'}">
         <img src={props.value}
               style={nvhFormattingEditor.getMediaMaxSizesRules(state.elementStyles)}/>
      </a>
   </template>
   <div if={state.elementStyles['show-url']}
         class="displayFlex alignCenter">
      <a href={props.value}
            target="{state.elementStyles["open-url-new-tab"] ? '_blank' : '_self'}">
         <pre if={state.elementStyles["set-url-label"]}>
            {state.elementStyles["url-label"]}
         </pre>
         <template if={!state.elementStyles["set-url-label"]}>
            {props.value}
         </template>
      </a>
   </div>
   <slot name="right-label"/>

   <script>
      export default {
         onBeforeMount() {
            this.nvhFormattingEditor = window.nvhFormattingEditor
            this.refreshState()
         },

         onBeforeUpdate() {
            this.refreshState()
         },

         refreshState(props) {
            this.state.elementStyles = this.nvhFormattingEditor.getStyles(this.props.schema, "element")
         }
      }
   </script>

   <style type="scss">
      :host {
         display: flex;
         flex-direction: column;
      }
   </style>
</entry-styled-element-image>
