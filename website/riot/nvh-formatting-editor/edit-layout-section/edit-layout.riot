<edit-layout>
  <div class="edit-layout-container">
    <div class="scrollable-div">
      <template each={(child, index) in window.nvhFormattingEditor.currentLayout.schema.children}>
        <placeholder-component onclick={() => onPlaceholderClick(child)}
                title={window.nvhFormattingEditor.isElementNonExisting(child.content.fullName)
                      ? "Entry structure changed, and element with path '" + child.content.fullName + "'' does not exist anymore. Click RESET button to fix the formatting structure." : ""}
                onmouseenter={(event) => onPlaceholderMouseEnter(event, child)}
                onmouseleave={(event) => onPlaceholderMouseLeave(event, child)}
                class={getCssClass(child)}
                state={window.nvhFormattingEditor.childWithInheritedArea(child, null)}
                parentState={window.nvhFormattingEditor.currentLayout.schema}
                isBaseLevel={true}
                index={index}
                canHaveAdders={true}
                isMarkupType={window.nvhFormattingEditor.isMarkupType(child.content.fullName)}/>
      </template>
    </div>
  </div>

  <script>
    export default {
      onPlaceholderClick(child) {
        window.nvhFormattingEditor.selectPlaceholder(child, null);
        window.nvhFormattingEditor.formattingEditorComponent.update();
      },
      onPlaceholderMouseEnter(event, state) {
        if (window.nvhFormattingEditor.global.mouseData === null) {
          event.currentTarget.classList.add("placeholder-mouse-hover");
          state.status.isHovered = true;
          window.nvhFormattingEditor.formattingEditorComponent.update();
        }
      },
      onPlaceholderMouseLeave(event, state) {
        if (window.nvhFormattingEditor.global.mouseData === null) {
          event.currentTarget.classList.remove("placeholder-mouse-hover");
          state.status.isHovered = false;
          window.nvhFormattingEditor.formattingEditorComponent.update();
        }
      },
      getCssClass(placeholder) {
        cssClass = "placeholder placeholder-first";
        cssClass += placeholder.status.isActive ? " placeholder-selected" : "";
        cssClass += placeholder.status.isHovered && window.nvhFormattingEditor.global.mouseData === null ? " placeholder-mouse-hover" : ""
        cssClass += placeholder.children.length === 0 ? " placeholder-no-children" : "";
        cssClass += window.nvhFormattingEditor.isElementNonExisting(placeholder.content.fullName) ? " placeholder-non-existing" : "";
        return cssClass;
      }
    }
  </script>

  <style>
    .edit-layout-container {
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;
      width: fit-content;
      height: 100%;
      overflow: auto;
      min-width: 100%;
    }

    .placeholder {
      position: relative;
      border: 4px solid transparent;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      flex-grow: 1;
      width: 100%;
      cursor: pointer;
    }
    .placeholder > .placeholder-inside-wrapper > .placeholder {
      height: 100%; /*ensure that all "placeholders" children will have correct height*/
      width: 100%; /*ensure that all "placeholders" children will have correct width*/
    }

    .placeholder-first {
      border: 4px solid transparent !important;
    }
    .placeholder-first > .action-panel {
      display: none;
      top: 0;
      left: 0;
    }
    .placeholder-first:hover > .action-panel {
      display: block;
      opacity: 0.3;
    }
    .placeholder-first:hover > .action-panel:hover {
      opacity: 1;
    }
    .placeholder-first:has(.placeholder:hover) > .action-panel {
      display: none;
    }

    .placeholder-selected {
      border: 4px solid var(--color-is-active) !important;
    }


    .adder {
      cursor: pointer;
    }
    /*"adder-column" is present in columns*/
    .adder-column {
      padding: 5px 0;
      width: 100%;
      margin: 0 10px;
      min-width: 50px;
    }
    /*"adder-row" is present in rows*/
    .adder-row {
      height: 100%;
      padding: 0 5px;
      margin: 10px 0;
    }
    .adder:hover .plus-icon-wrapper {
      display: flex;
      align-items: center;
      justify-content: center;
      height: 100%;
      width: 100%;
    }

    .placeholder-no-children:hover .adder-alone .plus-icon-wrapper {
      display: flex;
      align-items: center;
      justify-content: center;
      height: 100%;
      width: 100%;
    }
    .placeholder-no-children:hover .adder-alone .plus-icon-wrapper .adder-line {
      width: 0;
      height: 0;
    }
    .placeholder-no-children:hover .adder-alone .plus-icon-wrapper .adder-line .adder-icon-wrapper {
      opacity: 0.5;
    }
    .placeholder-no-children:hover .adder-alone .plus-icon-wrapper .adder-line .adder-icon-wrapper:hover {
      opacity: 1;
    }

    .placeholder-mouse-hover {
      border: 4px solid var(--color-is-hovered) !important;
      box-shadow: 5px 5px 5px black;
    }
    .placeholder-mouse-hover:has(.placeholder-mouse-hover) {
      border: 4px solid transparent !important;
      box-shadow: none;
    }

    .placeholder-non-existing {
      background-color: black !important;
    }
    .placeholder-non-existing .adder {
      display: none;
    }
  </style>
</edit-layout>