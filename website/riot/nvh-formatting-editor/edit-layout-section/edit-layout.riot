<edit-layout>
  <div class="edit-layout-container">
    <div class="scrollable-div">
      <template each={(child, index) in window.nvhFormattingEditor.currentLayout.schema.children}>
        <placeholder-component onclick={onPlaceholderClick}
                              onmouseenter={(event) => onPlaceholderMouseEnter(event, child, null)}
                              onmouseleave={(event) => onPlaceholderMouseLeave(event, child, null)}
                              class="placeholder placeholder-{child.orientation} placeholder-first
                                    {child.status.isActive ? "placeholder-selected" : ""}
                                    {child.status.isHovered ? "placeholder-mouse-hover" : ""}
                                    {child.children.length === 0 ? "placeholder-no-children" : ""}"
                              state={window.nvhFormattingEditor.childWithInheritedArea(child, null)}
                              parentState={window.nvhFormattingEditor.currentLayout.schema}
                              isBaseLevel={true}
                              index={index}
                              canHaveAdders={true}/>
      </template>
    </div>
  </div>

  <script>
    export default {
      onPlaceholderClick() {
        window.nvhFormattingEditor.formattingEditorComponent.update();
      },
      onPlaceholderMouseEnter(event, state, parentState) {
        event.target.classList.add("placeholder-mouse-hover");
        state.status.isHovered = true;
        /*
          This is a work-around.
          If I create a new placeholder inside of a placeholder,
          the outer one will lose focus. In this way I assign a focus to parent
          placeholder, which is expected behaviour. This is not true for base placeholder.
        */
        const classList = Array.from(event.target.parentElement.parentElement.classList);
        if (classList.includes("placeholder")) {
          event.target.parentElement.parentElement.classList.add("placeholder-mouse-hover");
          parentState.status.isHovered = true;
        }
        window.nvhFormattingEditor.formattingEditorComponent.update();
      },
      onPlaceholderMouseLeave(event, state, parentState) {
        event.target.classList.remove("placeholder-mouse-hover");
        state.status.isHovered = false;

        /*
          This is a work-around.
          If I move a placeholder using arrows, sometimes I enter child placeholder
          without entering parent placeholder. I need to assure that after leaving child placeholder,
          the parent will be hovered which is expected behaviour. This is not true for base placeholder.
        */
        const classList = Array.from(event.target.parentElement.parentElement.classList);
        if (classList.includes("placeholder")) {
          event.target.parentElement.parentElement.classList.add("placeholder-mouse-hover");
          parentState.status.isHovered = true;
        }

        window.nvhFormattingEditor.formattingEditorComponent.update();
      },
    }
  </script>

  <style>
    .edit-layout-container {
      border: 1px black dashed;
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;
      width: fit-content;
      height: 100%;
      overflow: auto;
      min-width: 100%;
    }


    .placeholder {
      position: relative;
      border: 4px solid #f7f6ed;
      display: flex;
      align-items: center;
      justify-content: center;
      flex-grow: 1;
      /*min-width: fit-content;*/ /*This was origin of vertical overflow bug, NEVER again*/
      width: calc(100% - 20px);
      margin: 10px;
      cursor: pointer;
    }
    .placeholder-first {
      cursor: default; /*action-panel can not be displayed on the base placeholder*/
      border: 4px solid #f7f6ed !important;
    }

    .placeholder-first > .action-panel {
      display: none;
      top: 0;
      left: 0;
    }
    .placeholder-first:hover > .action-panel {
      display: block;
      opacity: 0.3;
    }
    .placeholder-first:hover > .action-panel:hover {
      opacity: 1;
    }
    .placeholder-first:has(.placeholder:hover) > .action-panel {
      display: none;
    }
    

    .placeholder > .placeholder-inside-wrapper > .placeholder {
      height: calc(100% - 14px); /*ensure that all "placeholders" children will have correct height*/
      width: calc(100% - 7px); /*ensure that all "placeholders" children will have correct width*/
    }
    /*
    both "placeholder-row" and "placeholder-column" have same flex-direction,
    only "placeholder-inside-wrapper" will have corresponding
    flex-direction based on its orientation
    */
    .placeholder-row {
      flex-direction: column;
      padding: 7px;
    }
    .placeholder-column {
      flex-direction: column;
      padding: 7px;
    }

    .placeholder-selected {
      border: 4px solid var(--color-is-active) !important;
    }


    .adder:hover {
      cursor: pointer;
    }
    /*
    "adder-column" is present in columns,
    and rows with no children, because it is easier to click
    */
    .adder-column {
      padding: 5px;
      width: calc(100% - 3px);
      margin: 0 10px;
      min-width: 100px;
    }
    /*
    "adder-row" is present in rows
    */
    .adder-row {
      height: calc(100% - 5px);
      padding: 5px;
      margin: 10px 0;
    }
    .adder:hover .plus-icon-wrapper {
      display: flex;
      align-items: center;
      justify-content: center;
      height: 100%;
      width: 100%;
    }


    .adder-highligth-plus .plus-icon-wrapper {
      display: flex;
      align-items: center;
      justify-content: center;
      height: 100%;
      width: 100%;
    }
    .adder-highligth-plus .plus-icon-wrapper .adder-line {
      width: 0;
      height: 0;
    }
    .adder-highligth-plus .plus-icon-wrapper .adder-line .adder-icon-wrapper {
      color: var(--color-can-be-dropped);
    }

    .placeholder-no-children {
      padding: 14px;
    }
    .placeholder-no-children:hover .adder-alone .plus-icon-wrapper {
      display: flex;
      align-items: center;
      justify-content: center;
      height: 100%;
      width: 100%;
    }
    .placeholder-no-children:hover .adder-alone .plus-icon-wrapper .adder-line {
      width: 0;
      height: 0;
    }
    .placeholder-no-children:hover .adder-alone .plus-icon-wrapper .adder-line .adder-icon-wrapper {
      color: grey;
    }
    .placeholder-no-children:hover .adder-alone .plus-icon-wrapper .adder-line .adder-icon-wrapper:hover {
      color: black;
    }

    .placeholder-mouse-hover {
      border: 4px solid var(--color-is-hovered) !important;
    }
    .placeholder-mouse-hover:has(.placeholder-mouse-hover) {
      border: 4px solid #f7f6ed !important;
    }
  </style>
</edit-layout>