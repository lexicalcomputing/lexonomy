<elements-choice-item>
  <div class="elements-choice-item-wrapper
              {isValidToActivePlaceholder() ? "elements-choice-item-wrapper-valid" : ""}
              {isInvalidToActivePlaceholder() ? "elements-choice-item-wrapper-invalid" : ""}"
      style="padding-left: {props.indentationLevel}px"
      onmousedown={() => onMouseDown(props.state)}>
    <div class="elements-choice-item-box"
        style="background-color: {window.nvhStore.getElementColor(props.state.data.fullName)}">
    </div>
    <div style="color: {window.nvhStore.getElementColor(props.state.data.fullName)}">{props.state.data.name}</div>
  </div>
  <template each={child in props.state.data.children}>
    <elements-choice-item if={window.nvhStore.getElementConfig(child.data.fullName) !== undefined && window.nvhStore.getElementConfig(child.data.fullName).type !== "markup"}
                          state={child}
                          indentationLevel={props.indentationLevel + 15}/>
  </template>

  <script>
    export default {
      onMouseDown(state) {
        window.nvhFormattingEditor.global.mouseData = this.props.state.data;
        window.nvhFormattingEditor.global.draggedElementFullName = this.props.state.data.fullName;
        window.nvhFormattingEditor.formattingEditorComponent.update();
      },
      isValidToActivePlaceholder() {
        if (window.nvhFormattingEditor.global.selectedPlaceholder === null) {
          return false;
        }
        return window.nvhFormattingEditor.isChoiceElementValidToPlaceholder(this.props.state.data,
                                                                            window.nvhFormattingEditor.global.selectedPlaceholder,
                                                                            window.nvhFormattingEditor.global.selectedPlaceholderParentAreaFullName);
      },
      isInvalidToActivePlaceholder() {
        if (window.nvhFormattingEditor.global.selectedPlaceholder === null) {
          return false;
        }
        return !this.isValidToActivePlaceholder();
      }
    }
  </script>

  <style>
    .elements-choice-item-wrapper {
      display: flex;
      align-items: center;
      gap: 4px;
      cursor: grab;
      user-select: none;
    }
    .elements-choice-item-wrapper:hover {
      background-color: #d7e4f7;
    }
    .elements-choice-item-wrapper-valid {
      background-color: rgb(230, 244, 210);
    }
    .elements-choice-item-wrapper-valid:hover {
      background-color: rgb(206, 231, 170);
    }
    .elements-choice-item-wrapper-invalid {
      opacity: 0.4;
    }
    .elements-choice-item-box {
      width: 8px;
      height: 8px;
      border-radius: 2px;
    }
  </style>
</elements-choice-item>