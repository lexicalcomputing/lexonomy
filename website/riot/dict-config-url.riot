<dict-config-url>
   <dict-config-nav dictId={ dictId } dictTitle={ props.dictDetails.title } configId={ configId } configTitle={ configTitle }/>
   <h3>Change URL</h3>
   <div class="row">
      <label for="url">Current URL</label>
      <div style="margin: 0 0 30px;">
         <span>https://www.lexonomy.eu/{ props.dictId }</span>
      </div>
   </div>
   <div class="row">
      <label for="url">New URL</label>
      <div>
         <div style="display: flex; align-items: baseline;">
            <span id="baseUrl">https://www.lexonomy.eu/</span>
            <span>
               <input id="url" type="text" class="validate inlineBlock" required minlength="5" pattern="[a-zA-Z0-9\-_]*" style="max-width: 300px;"/>
            </span>
         </div>
         <div class="input-field" style="margin-top: 0;">
            <span class="helper-text">This will be your dictionary's address on the web. You will be able to change this later. Allowed: letters, numbers, - and _</span>
         </div>
      </div>
   </div>
   <dict-config-buttons save-data={saveData} dict-id={dictId} label="Change"></dict-config-buttons>
   <br>
   <div>
      <span id="error" style="display:none">This URL is already taken.</span>
      <span id="success" style="display:none">Your dictionary has been moved to a new URL. <a href="" id="newlink">Go to new dictionary URL</a>.</span>
   </div>

   <script>
      export default {
         dictId: '',
         configId: '',
         configTitle: 'Change URL',
         configData: {searchableElements:[]},

         onMounted() {
            this.dictId = this.props.dictId;
            this.configId = this.props.configId;
            console.log('config dict '+ this.dictId + '-' + this.configId)
            this.props.loadDictDetail();
            M.updateTextFields();
         },

         onUpdated() {
         },

         async fillConfigForm() {
            this.props.loadConfigData(this.configId).then((response)=>{
               this.configData = response;
               $('#search-element').val(this.configData.searchableElements);
               this.update();
            });
         },

         saveData() {
            var newurl = $('#url').val();
            if (newurl != "" && $('#url').hasClass('valid')) {
               $('#submit_button').html('Saving...');
               $.post(window.API_URL + this.dictId+"/move.json", {url: newurl}, (response) => {
                  if (response.success) {
                     $('#success').show();
                     $('#newlink').attr('href', '#/'+newurl+'/edit');
                  } else {
                     $('#error').show();
                     $('#submit_button').html('Change');
                  }
               });
            }
         }
      }
   </script>

</dict-config-url>
