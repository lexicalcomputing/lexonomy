<dict-list>
   <loading-overlay if={state.isLoading || dictData.isDictionaryListLoading}/>
   <template if={!dictData.isDictionaryListLoading}>
      <div if={dictData.dictionaryList.length}>
         <h1>your dictionaries</h1>
         <ul class="collection">
            <li each={ dict in dictData.dictionaryList }
                  class="collection-item ">
               <div>
                  <a href="#/{ dict.id }">{ dict.title }</a>
                  <span if={ dict.lang }
                        class="dict-lang">{ dict.lang }</span>
                  <span class="dict-lang grey-text">{ dict.size } entries</span>
                  <a if={ dict.currentUserCanDelete }
                        class="secondary-content clickable"
                        title="delete dictionary"
                        onclick={ doDeleteDict.bind(this, dict.id) }>
                     <i class="material-icons">delete</i>
                  </a>
                  <a class="secondary-content clickable"
                        title="clone dictionary"
                        onclick={ doCloneDict.bind(this, dict.id) }>
                     <i class="material-icons">content_copy</i>
                  </a>
                  <a  if={ dict.currentUserCanDelete }
                        class="secondary-content clickable"
                        title="config dictionary"
                        onclick={ doConfigDict.bind(this, dict.id) }>
                     <i class="material-icons">settings</i>
                  </a>
                  <a if={ dict.currentUserCanEdit }
                        class="secondary-content clickable"
                        data-dict-id={ dict.id }
                        title="edit dictionary"
                        onclick={ doEditDict.bind(this, dict.id) }>
                     <i class="material-icons">edit</i>
                  </a>
               </div>
            </li>
         </ul>
         <a href="#/make"
               class="btn waves-effect waves-light">
            <i class="material-icons left">add</i>
            create new dictionary
         </a>
      </div>
      <div if={!dictData.dictionaryList.length}
            class="grey-text center-align">
         <h1>no dictionaries</h1>
         <div>
            You have no dictionary yet. Create one using button below.
         </div>
         <br>
         <a href="#/make"
               class="btn waves-effect waves-light">
            <i class="material-icons left">add</i>
            create new dictionary
         </a>
      </div>
   </template>

   <style>
      .dict-lang {
         padding-left: 0.5em;
      }
      ul li:hover{
         background-color: #f8f8f8f2!important;
      }
   </style>

   <script>
      export default {
         bindings: [["store", "dictionaryListChanged", "update"],
                    ["store", "dictionaryListLoadingChanged", "update"]],
         state: {
            isLoading: false
         },

         doEditDict(dictId) {
            route(dictId + "/edit")
         },

         doConfigDict(dictId) {
            route(dictId + "/config")
         },

         doCloneDict(dictId) {
            this.update({isLoading: true})
            this.store.cloneDictionary(dictId)
         },

         doDeleteDict(dictId) {
            var dictTitle = this.store.getDictionary(dictId).title
            if (confirm("Are you sure you want to delete dictionary " + dictTitle + "? You will not be able to undo this.")) {
               this.update({isLoading: true})
               this.store.deleteDictionary(dictId)
                     .always(() => {this.update({isLoading: false})})
            }
         },

         onBeforeMount() {
            !this.dictData.isDictionaryListLoaded && this.store.loadDictionaryList()
         }
      }
   </script>
</dict-list>
